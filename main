{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1rvGnX_fgX_wS5jfANIZQAOOsYOXbb2Xj","authorship_tag":"ABX9TyPI2tmT4V2/MBF2u20gdniH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1.Explore data"],"metadata":{"id":"dkT0dMQ0T8dk"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"ALDl-lOcT38x","executionInfo":{"status":"ok","timestamp":1699522089359,"user_tz":-420,"elapsed":1347,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["#read file\n","df = pd.read_csv('/content/drive/MyDrive/Project/Bank Customer Churn/archive/Customer-Churn-Records.csv')"],"metadata":{"id":"BVei4ISbUCS-","executionInfo":{"status":"ok","timestamp":1699522090406,"user_tz":-420,"elapsed":1049,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"HRGfdv-HUkwT","executionInfo":{"status":"ok","timestamp":1699522090406,"user_tz":-420,"elapsed":15,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"d0977323-a6d4-4810-efc2-a2339de87c0c"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n","0          1    15634602  Hargrave          619    France  Female   42   \n","1          2    15647311      Hill          608     Spain  Female   41   \n","2          3    15619304      Onio          502    France  Female   42   \n","3          4    15701354      Boni          699    France  Female   39   \n","4          5    15737888  Mitchell          850     Spain  Female   43   \n","\n","   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n","0       2       0.00              1          1               1   \n","1       1   83807.86              1          0               1   \n","2       8  159660.80              3          1               0   \n","3       1       0.00              2          0               0   \n","4       2  125510.82              1          1               1   \n","\n","   EstimatedSalary  Exited  Complain  Satisfaction Score Card Type  \\\n","0        101348.88       1         1                   2   DIAMOND   \n","1        112542.58       0         1                   3   DIAMOND   \n","2        113931.57       1         1                   3   DIAMOND   \n","3         93826.63       0         0                   5      GOLD   \n","4         79084.10       0         0                   5      GOLD   \n","\n","   Point Earned  \n","0           464  \n","1           456  \n","2           377  \n","3           350  \n","4           425  "],"text/html":["\n","  <div id=\"df-815f145b-7f6c-42ef-8f35-fca5ba5e5fc8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>Surname</th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Card Type</th>\n","      <th>Point Earned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>15634602</td>\n","      <td>Hargrave</td>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>DIAMOND</td>\n","      <td>464</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15647311</td>\n","      <td>Hill</td>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>DIAMOND</td>\n","      <td>456</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>15619304</td>\n","      <td>Onio</td>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>DIAMOND</td>\n","      <td>377</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>15701354</td>\n","      <td>Boni</td>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>GOLD</td>\n","      <td>350</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>15737888</td>\n","      <td>Mitchell</td>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>GOLD</td>\n","      <td>425</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-815f145b-7f6c-42ef-8f35-fca5ba5e5fc8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-815f145b-7f6c-42ef-8f35-fca5ba5e5fc8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-815f145b-7f6c-42ef-8f35-fca5ba5e5fc8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f99314db-0917-48c6-98ea-bf46677743cc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f99314db-0917-48c6-98ea-bf46677743cc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f99314db-0917-48c6-98ea-bf46677743cc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYVnBXDuUplQ","executionInfo":{"status":"ok","timestamp":1699522090407,"user_tz":-420,"elapsed":14,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"a135fb40-a3f7-4b93-c863-5ffeeb1a252d"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 18)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"yNQmBfzzU0T9","executionInfo":{"status":"ok","timestamp":1699522090407,"user_tz":-420,"elapsed":13,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"bfb8a5cd-1095-45e5-d354-8216a5ddb731"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         RowNumber    CustomerId   CreditScore           Age        Tenure  \\\n","count  10000.00000  1.000000e+04  10000.000000  10000.000000  10000.000000   \n","mean    5000.50000  1.569094e+07    650.528800     38.921800      5.012800   \n","std     2886.89568  7.193619e+04     96.653299     10.487806      2.892174   \n","min        1.00000  1.556570e+07    350.000000     18.000000      0.000000   \n","25%     2500.75000  1.562853e+07    584.000000     32.000000      3.000000   \n","50%     5000.50000  1.569074e+07    652.000000     37.000000      5.000000   \n","75%     7500.25000  1.575323e+07    718.000000     44.000000      7.000000   \n","max    10000.00000  1.581569e+07    850.000000     92.000000     10.000000   \n","\n","             Balance  NumOfProducts    HasCrCard  IsActiveMember  \\\n","count   10000.000000   10000.000000  10000.00000    10000.000000   \n","mean    76485.889288       1.530200      0.70550        0.515100   \n","std     62397.405202       0.581654      0.45584        0.499797   \n","min         0.000000       1.000000      0.00000        0.000000   \n","25%         0.000000       1.000000      0.00000        0.000000   \n","50%     97198.540000       1.000000      1.00000        1.000000   \n","75%    127644.240000       2.000000      1.00000        1.000000   \n","max    250898.090000       4.000000      1.00000        1.000000   \n","\n","       EstimatedSalary        Exited      Complain  Satisfaction Score  \\\n","count     10000.000000  10000.000000  10000.000000        10000.000000   \n","mean     100090.239881      0.203800      0.204400            3.013800   \n","std       57510.492818      0.402842      0.403283            1.405919   \n","min          11.580000      0.000000      0.000000            1.000000   \n","25%       51002.110000      0.000000      0.000000            2.000000   \n","50%      100193.915000      0.000000      0.000000            3.000000   \n","75%      149388.247500      0.000000      0.000000            4.000000   \n","max      199992.480000      1.000000      1.000000            5.000000   \n","\n","       Point Earned  \n","count  10000.000000  \n","mean     606.515100  \n","std      225.924839  \n","min      119.000000  \n","25%      410.000000  \n","50%      605.000000  \n","75%      801.000000  \n","max     1000.000000  "],"text/html":["\n","  <div id=\"df-b47fd584-ad74-4e46-8b9e-5c9f28e03e49\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Point Earned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.00000</td>\n","      <td>1.000000e+04</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.00000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5000.50000</td>\n","      <td>1.569094e+07</td>\n","      <td>650.528800</td>\n","      <td>38.921800</td>\n","      <td>5.012800</td>\n","      <td>76485.889288</td>\n","      <td>1.530200</td>\n","      <td>0.70550</td>\n","      <td>0.515100</td>\n","      <td>100090.239881</td>\n","      <td>0.203800</td>\n","      <td>0.204400</td>\n","      <td>3.013800</td>\n","      <td>606.515100</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2886.89568</td>\n","      <td>7.193619e+04</td>\n","      <td>96.653299</td>\n","      <td>10.487806</td>\n","      <td>2.892174</td>\n","      <td>62397.405202</td>\n","      <td>0.581654</td>\n","      <td>0.45584</td>\n","      <td>0.499797</td>\n","      <td>57510.492818</td>\n","      <td>0.402842</td>\n","      <td>0.403283</td>\n","      <td>1.405919</td>\n","      <td>225.924839</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00000</td>\n","      <td>1.556570e+07</td>\n","      <td>350.000000</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>11.580000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>119.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2500.75000</td>\n","      <td>1.562853e+07</td>\n","      <td>584.000000</td>\n","      <td>32.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>51002.110000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>410.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5000.50000</td>\n","      <td>1.569074e+07</td>\n","      <td>652.000000</td>\n","      <td>37.000000</td>\n","      <td>5.000000</td>\n","      <td>97198.540000</td>\n","      <td>1.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>100193.915000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>605.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7500.25000</td>\n","      <td>1.575323e+07</td>\n","      <td>718.000000</td>\n","      <td>44.000000</td>\n","      <td>7.000000</td>\n","      <td>127644.240000</td>\n","      <td>2.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>149388.247500</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>801.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10000.00000</td>\n","      <td>1.581569e+07</td>\n","      <td>850.000000</td>\n","      <td>92.000000</td>\n","      <td>10.000000</td>\n","      <td>250898.090000</td>\n","      <td>4.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>199992.480000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>1000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b47fd584-ad74-4e46-8b9e-5c9f28e03e49')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b47fd584-ad74-4e46-8b9e-5c9f28e03e49 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b47fd584-ad74-4e46-8b9e-5c9f28e03e49');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-470753fe-f07e-42a8-b698-c257b7e592b7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-470753fe-f07e-42a8-b698-c257b7e592b7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-470753fe-f07e-42a8-b698-c257b7e592b7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#xóa nhưng cột không ảnh hưởng đến model\n","df.drop(columns = ['CustomerId','Surname','RowNumber'],inplace = True)"],"metadata":{"id":"rbKYfbjnVCMS","executionInfo":{"status":"ok","timestamp":1699522090407,"user_tz":-420,"elapsed":12,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def Value_union(train_df, name_column):\n","  return train_df[name_column].value_counts()\n","\n","# Tạo một danh sách các tên cột cần tính toán.\n","name_columns = list(df.columns)\n","\n","# Tính toán giá trị không lặp lại của từng cột và lưu vào một biến.\n","value_unions = {}\n","for name_column in name_columns:\n","  value_unions[name_column] = Value_union(df, name_column)\n","\n","# In giá trị không lặp lại của từng cột.\n","for name_column, value_union in value_unions.items():\n","  print(f\"Giá trị không lặp lại của cột {name_column}:\\n{value_union}\")\n","  print(\"\\n------------------------------------------------------------------------------------------\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W7hnpaBNV0hi","executionInfo":{"status":"ok","timestamp":1699522090407,"user_tz":-420,"elapsed":11,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"c1e1b851-ade5-46cb-e107-f05724faddea"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Giá trị không lặp lại của cột CreditScore:\n","850    233\n","678     63\n","655     54\n","705     53\n","667     53\n","      ... \n","404      1\n","351      1\n","365      1\n","417      1\n","419      1\n","Name: CreditScore, Length: 460, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Geography:\n","France     5014\n","Germany    2509\n","Spain      2477\n","Name: Geography, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Gender:\n","Male      5457\n","Female    4543\n","Name: Gender, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Age:\n","37    478\n","38    477\n","35    474\n","36    456\n","34    447\n","     ... \n","92      2\n","82      1\n","88      1\n","85      1\n","83      1\n","Name: Age, Length: 70, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Tenure:\n","2     1048\n","1     1035\n","7     1028\n","8     1025\n","5     1012\n","3     1009\n","4      989\n","9      984\n","6      967\n","10     490\n","0      413\n","Name: Tenure, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Balance:\n","0.00         3617\n","130170.82       2\n","105473.74       2\n","85304.27        1\n","159397.75       1\n","             ... \n","81556.89        1\n","112687.69       1\n","108698.96       1\n","238387.56       1\n","130142.79       1\n","Name: Balance, Length: 6382, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột NumOfProducts:\n","1    5084\n","2    4590\n","3     266\n","4      60\n","Name: NumOfProducts, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột HasCrCard:\n","1    7055\n","0    2945\n","Name: HasCrCard, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột IsActiveMember:\n","1    5151\n","0    4849\n","Name: IsActiveMember, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột EstimatedSalary:\n","24924.92     2\n","101348.88    1\n","55313.44     1\n","72500.68     1\n","182692.80    1\n","            ..\n","120893.07    1\n","188377.21    1\n","55902.93     1\n","4523.74      1\n","38190.78     1\n","Name: EstimatedSalary, Length: 9999, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Exited:\n","0    7962\n","1    2038\n","Name: Exited, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Complain:\n","0    7956\n","1    2044\n","Name: Complain, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Satisfaction Score:\n","3    2042\n","2    2014\n","4    2008\n","5    2004\n","1    1932\n","Name: Satisfaction Score, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Card Type:\n","DIAMOND     2507\n","GOLD        2502\n","SILVER      2496\n","PLATINUM    2495\n","Name: Card Type, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n","Giá trị không lặp lại của cột Point Earned:\n","408    26\n","709    25\n","244    23\n","629    23\n","503    22\n","       ..\n","854     4\n","996     2\n","119     1\n","163     1\n","206     1\n","Name: Point Earned, Length: 785, dtype: int64\n","\n","------------------------------------------------------------------------------------------\n"]}]},{"cell_type":"markdown","source":["#2. Explore variables"],"metadata":{"id":"QNiU0sNvWdBZ"}},{"cell_type":"markdown","source":["##Age"],"metadata":{"id":"ieSotVXOWl8v"}},{"cell_type":"code","source":["age_df = df.groupby(by = ['Age','Exited']).agg('count')#group by age và exited\n","age_df.reset_index(drop=False, inplace=True)#thêm số thứ tự row cho bảng\n","age_df_inexit = age_df[age_df['Exited']==0][['Age','CreditScore']]#điểm của khách hàng chưa rời bỏ theo tuôi\n","age_df_inexit = age_df_inexit.rename(columns = {\"CreditScore\" : \"Count_inexit\"})#đổi tên\n","\n","age_df_exit = age_df[age_df['Exited']==1][['Age','CreditScore']]#điểm của khách hàng rời bỏ theo tuôi\n","age_df_exit = age_df_exit.rename(columns = {\"CreditScore\" : \"Count_exit\"})#đổi tên\n","\n","age_vs_exited = pd.merge(age_df_inexit,age_df_exit,how='outer',left_on='Age',right_on='Age')#nối 2 bảng với nhau\n","age_vs_exited['ratio'] = age_vs_exited.fillna(0,inplace=True)#thêm cột ration\n","\n","age_vs_exited['ratio'] = age_vs_exited['Count_exit']*100/(age_vs_exited['Count_inexit'] + age_vs_exited['Count_exit'])#tỷ lệ\n","\n","age_vs_exited\n"],"metadata":{"id":"65-lIT1PWRjw","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1699522090407,"user_tz":-420,"elapsed":9,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"e2638a61-77dc-4ea0-8a46-96d41c887ea0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Age  Count_inexit  Count_exit      ratio\n","0    18            20         2.0   9.090909\n","1    19            26         1.0   3.703704\n","2    20            38         2.0   5.000000\n","3    21            50         3.0   5.660377\n","4    22            72        12.0  14.285714\n","..  ...           ...         ...        ...\n","65   83             1         0.0   0.000000\n","66   84             1         1.0  50.000000\n","67   85             1         0.0   0.000000\n","68   88             1         0.0   0.000000\n","69   92             2         0.0   0.000000\n","\n","[70 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-147182d3-4de2-475f-bebd-6ea6f3a4e0c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Count_inexit</th>\n","      <th>Count_exit</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>2.0</td>\n","      <td>9.090909</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>19</td>\n","      <td>26</td>\n","      <td>1.0</td>\n","      <td>3.703704</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>38</td>\n","      <td>2.0</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>21</td>\n","      <td>50</td>\n","      <td>3.0</td>\n","      <td>5.660377</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>22</td>\n","      <td>72</td>\n","      <td>12.0</td>\n","      <td>14.285714</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>83</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>84</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>85</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>88</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>92</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>70 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-147182d3-4de2-475f-bebd-6ea6f3a4e0c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-147182d3-4de2-475f-bebd-6ea6f3a4e0c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-147182d3-4de2-475f-bebd-6ea6f3a4e0c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a9424079-ce83-485d-b464-9a1d9a238308\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9424079-ce83-485d-b464-9a1d9a238308')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a9424079-ce83-485d-b464-9a1d9a238308 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#trực quan hóa\n","fig, ax = plt.subplots(figsize=[20,6])\n","sns.barplot(data = age_vs_exited, x = 'Age', y = 'ratio')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":239},"id":"vrF71V2LrgeI","executionInfo":{"status":"ok","timestamp":1699522091891,"user_tz":-420,"elapsed":1492,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"d04bea63-3d4a-4273-ac6f-cbe15bdba0d9"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Age', ylabel='ratio'>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#tại sao 84 cao đột ngột\n","age_vs_exited.loc[age_vs_exited['Age'] == 84]\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"-ECteZZOrhkc","executionInfo":{"status":"ok","timestamp":1699522091892,"user_tz":-420,"elapsed":14,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"83932c9f-9903-496a-838a-475c4e89ba78"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Age  Count_inexit  Count_exit  ratio\n","66   84             1         1.0   50.0"],"text/html":["\n","  <div id=\"df-d5c31ac0-3787-4ae0-b8b2-dcefb3e82cf9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Count_inexit</th>\n","      <th>Count_exit</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>66</th>\n","      <td>84</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>50.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5c31ac0-3787-4ae0-b8b2-dcefb3e82cf9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d5c31ac0-3787-4ae0-b8b2-dcefb3e82cf9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d5c31ac0-3787-4ae0-b8b2-dcefb3e82cf9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#liêt kê các quốc gia\n","df['Geography'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dgT_xoWrx_DT","executionInfo":{"status":"ok","timestamp":1699522091892,"user_tz":-420,"elapsed":14,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"a9982418-06eb-42fa-e311-a16aada6d96d"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['France', 'Spain', 'Germany'], dtype=object)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#hàm xuất tỷ lệ churn của các quốc gia trong khoảng 45 tới 65 tổi\n","def ratio(nation):\n","  return len(df[(df['Geography']==str(nation)) & (df['Age']>=45)&(df['Age']<=65)])/len(df[df['Geography']==str(nation)])"],"metadata":{"id":"FjQ-U4naH3kX","executionInfo":{"status":"ok","timestamp":1699522091892,"user_tz":-420,"elapsed":13,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["for i in ['France', 'Spain', 'Germany']:\n","  print(i, \":\",\"{:.2f}\".format(ratio(i)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F8zI7gQuIcYp","executionInfo":{"status":"ok","timestamp":1699522091892,"user_tz":-420,"elapsed":12,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"68a78a14-c6b5-4089-ecef-442bb5132d2d"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["France : 0.19\n","Spain : 0.20\n","Germany : 0.25\n"]}]},{"cell_type":"markdown","source":["Đức có tỷ lệ churn cao hơn 2 nước còn lại trong khoảng 45 tới 65 tuôi"],"metadata":{"id":"07D_OrTVLLoR"}},{"cell_type":"markdown","source":["##Tenure"],"metadata":{"id":"-VjgHekbLtOL"}},{"cell_type":"code","source":["df_ten_exit = df[df.Exited == 1].groupby('Tenure').agg('count')#group by age và exited\n","df_ten_exit.reset_index(drop=False, inplace=True)#thêm số thứ tự row cho bảng\n","df_ten_exit = df_ten_exit[['Tenure','CreditScore']]#điểm của khách hàng chưa rời bỏ theo tuôi\n","df_ten_exit = df_ten_exit.rename(columns = {\"CreditScore\" : \"Count\"})#đổi tên\n","\n","df_ten_inexit = df[df.Exited == 0].groupby('Tenure').agg('count')#group by age và exited\n","df_ten_inexit.reset_index(drop=False, inplace=True)#thêm số thứ tự row cho bảng\n","df_ten_inexit = df_ten_inexit[['Tenure','CreditScore']]#điểm của khách hàng chưa rời bỏ theo tuôi\n","df_ten_inexit = df_ten_inexit.rename(columns = {\"CreditScore\" : \"Count\"})#đổi tên\n","\n","df_ten = pd.merge(df_ten_exit,df_ten_inexit,how='outer', on = 'Tenure', suffixes = ('_exit','_inexit'))#nối 2 bảng với nhau\n","\n","df_ten['ratio'] = df_ten['Count_exit']/(df_ten['Count_exit']+df_ten['Count_inexit'])\n","df_ten"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"sfxBWo5oKLEj","executionInfo":{"status":"ok","timestamp":1699522091892,"user_tz":-420,"elapsed":11,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"faee535c-41f5-45fe-97f6-e5d6f499673c"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Tenure  Count_exit  Count_inexit     ratio\n","0        0          95           318  0.230024\n","1        1         232           803  0.224155\n","2        2         201           847  0.191794\n","3        3         213           796  0.211100\n","4        4         203           786  0.205258\n","5        5         209           803  0.206522\n","6        6         196           771  0.202689\n","7        7         177           851  0.172179\n","8        8         197           828  0.192195\n","9        9         214           770  0.217480\n","10      10         101           389  0.206122"],"text/html":["\n","  <div id=\"df-f75282a8-1a15-4685-9354-df1ef243f81f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tenure</th>\n","      <th>Count_exit</th>\n","      <th>Count_inexit</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>95</td>\n","      <td>318</td>\n","      <td>0.230024</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>232</td>\n","      <td>803</td>\n","      <td>0.224155</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>201</td>\n","      <td>847</td>\n","      <td>0.191794</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>213</td>\n","      <td>796</td>\n","      <td>0.211100</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>203</td>\n","      <td>786</td>\n","      <td>0.205258</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>209</td>\n","      <td>803</td>\n","      <td>0.206522</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>196</td>\n","      <td>771</td>\n","      <td>0.202689</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>177</td>\n","      <td>851</td>\n","      <td>0.172179</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>197</td>\n","      <td>828</td>\n","      <td>0.192195</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>214</td>\n","      <td>770</td>\n","      <td>0.217480</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>389</td>\n","      <td>0.206122</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f75282a8-1a15-4685-9354-df1ef243f81f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f75282a8-1a15-4685-9354-df1ef243f81f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f75282a8-1a15-4685-9354-df1ef243f81f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-32b5d3c7-199b-410f-941b-2a215616335b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32b5d3c7-199b-410f-941b-2a215616335b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-32b5d3c7-199b-410f-941b-2a215616335b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["fix, ax = plt.subplots(figsize=[10,6])\n","ax.bar(x=df_ten.Tenure, height=df_ten['Count_inexit'],label='Count_inexit',color='Orange')\n","ax.bar(x=df_ten.Tenure, height=df_ten['Count_exit'],label='Count_exit',color='Red')\n","\n","ax2 = ax.twinx()\n","ax2.plot(df_ten.Tenure,df_ten.ratio,color='Purple')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"DuZe4uo7LVa-","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":661,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"aeeae5c6-70a8-4b04-f731-63e74143b94d"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7b43ba1ab970>]"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["tại 7 thấp xuống đang kể"],"metadata":{"id":"DNLiaFnpQSdr"}},{"cell_type":"code","source":[],"metadata":{"id":"_n-wooFGPA5H","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":21,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["#Estimated Salary"],"metadata":{"id":"HzCEnitnSOdZ"}},{"cell_type":"code","source":["#tỷ lệ nam và nữa rời bỏ giữa nam và\n","df_sal_exited_fe = df[df['Gender']=='Female'][['Exited','EstimatedSalary']]\n","df_sal_exited_ma = df[df['Gender']=='Male'][['Exited','EstimatedSalary']]\n","\n","df_sal_exited_fe.groupby(by = 'Exited').agg(\"mean\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Mk3Di4wfSSMt","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":20,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"449028dd-a818-4204-e348-c9d0863516d4"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        EstimatedSalary\n","Exited                 \n","0          99816.071486\n","1         102948.986093"],"text/html":["\n","  <div id=\"df-24a4bcde-b4b4-4381-a6fb-d2e89c5c46f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>EstimatedSalary</th>\n","    </tr>\n","    <tr>\n","      <th>Exited</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>99816.071486</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>102948.986093</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24a4bcde-b4b4-4381-a6fb-d2e89c5c46f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24a4bcde-b4b4-4381-a6fb-d2e89c5c46f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24a4bcde-b4b4-4381-a6fb-d2e89c5c46f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-97b17f15-e465-47eb-950d-496092957d94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97b17f15-e465-47eb-950d-496092957d94')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-97b17f15-e465-47eb-950d-496092957d94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df_sal_exited_ma.groupby(by = 'Exited').agg(\"mean\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"VtkjAVA2SodK","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":20,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"132c56d0-fe18-49a2-a2ab-e37bb4a29ec3"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        EstimatedSalary\n","Exited                 \n","0          99660.223205\n","1          99686.650656"],"text/html":["\n","  <div id=\"df-b4329556-2449-455a-873d-9cf432487099\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>EstimatedSalary</th>\n","    </tr>\n","    <tr>\n","      <th>Exited</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>99660.223205</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>99686.650656</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4329556-2449-455a-873d-9cf432487099')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4329556-2449-455a-873d-9cf432487099 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4329556-2449-455a-873d-9cf432487099');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff2b3761-dcbc-4ec7-a7d2-79167444418e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff2b3761-dcbc-4ec7-a7d2-79167444418e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff2b3761-dcbc-4ec7-a7d2-79167444418e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["#Geography"],"metadata":{"id":"Mk9wq5MRTPOj"}},{"cell_type":"code","source":["df_geo = df.groupby(by=['Geography']).agg('count')#gôm nhóm geography\n","df_geo.reset_index(inplace=True)#thêm code index\n","df_geo = df_geo[['Geography','Age']]#chỉ lấy 2 cột\n","df_geo.rename(inplace=True,columns={'Age':'Count'})#đổi tên column tên\n","\n","df_geo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"e81Nr4kES_ob","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":18,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"dc6538ba-16fb-4304-e1ae-682796cfefb0"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Geography  Count\n","0    France   5014\n","1   Germany   2509\n","2     Spain   2477"],"text/html":["\n","  <div id=\"df-8d777685-76c2-465e-b1e3-d9249917dcb5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Geography</th>\n","      <th>Count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>France</td>\n","      <td>5014</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Germany</td>\n","      <td>2509</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Spain</td>\n","      <td>2477</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d777685-76c2-465e-b1e3-d9249917dcb5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d777685-76c2-465e-b1e3-d9249917dcb5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d777685-76c2-465e-b1e3-d9249917dcb5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be582ece-6c95-447f-be88-dfd86f4f4c00\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be582ece-6c95-447f-be88-dfd86f4f4c00')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be582ece-6c95-447f-be88-dfd86f4f4c00 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df_geo_exit = df[df[ 'Exited' ]==1].groupby(by=[ 'Geography']).agg('count')\n","df_geo_exit.reset_index(inplace=True,drop=False)\n","\n","df_geo_exit = df_geo_exit[['Geography', 'Age']]\n","df_geo_exit.rename(inplace=True,columns={\"Age\" : \"count\"})\n","\n","df_geo_exit\n","\n","df_geo['count_exit'] = df_geo_exit['count']\n","\n","df_geo['exit_ratio'] = df_geo['count_exit']/df_geo['Count']\n","\n","df_geo\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"hMbKTmBfTaNF","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":17,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"57ce2314-7835-4683-e592-3efa9ffd50f8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Geography  Count  count_exit  exit_ratio\n","0    France   5014         811    0.161747\n","1   Germany   2509         814    0.324432\n","2     Spain   2477         413    0.166734"],"text/html":["\n","  <div id=\"df-eb7341d2-f2ff-4a9a-9bec-d457ef2eba64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Geography</th>\n","      <th>Count</th>\n","      <th>count_exit</th>\n","      <th>exit_ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>France</td>\n","      <td>5014</td>\n","      <td>811</td>\n","      <td>0.161747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Germany</td>\n","      <td>2509</td>\n","      <td>814</td>\n","      <td>0.324432</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Spain</td>\n","      <td>2477</td>\n","      <td>413</td>\n","      <td>0.166734</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb7341d2-f2ff-4a9a-9bec-d457ef2eba64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb7341d2-f2ff-4a9a-9bec-d457ef2eba64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb7341d2-f2ff-4a9a-9bec-d457ef2eba64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1fa9f2fc-10e1-474e-989b-f1dc4b65e74c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1fa9f2fc-10e1-474e-989b-f1dc4b65e74c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1fa9f2fc-10e1-474e-989b-f1dc4b65e74c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_f = df[df['Geography']=='France']\n","df_f.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"CI2fUK_OVAFr","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":16,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"3e17736d-7632-46c0-b257-581d382fe960"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CreditScore          Age       Tenure        Balance  NumOfProducts  \\\n","count  5014.000000  5014.000000  5014.000000    5014.000000    5014.000000   \n","mean    649.668329    38.511767     5.004587   62092.636516       1.530913   \n","std      97.016799    10.469459     2.888475   64133.565524       0.570347   \n","min     350.000000    18.000000     0.000000       0.000000       1.000000   \n","25%     582.000000    31.000000     2.000000       0.000000       1.000000   \n","50%     653.000000    37.000000     5.000000   62153.500000       1.000000   \n","75%     717.000000    43.000000     7.000000  121444.877500       2.000000   \n","max     850.000000    92.000000    10.000000  238387.560000       4.000000   \n","\n","         HasCrCard  IsActiveMember  EstimatedSalary       Exited     Complain  \\\n","count  5014.000000     5014.000000      5014.000000  5014.000000  5014.000000   \n","mean      0.706621        0.516753     99899.180814     0.161747     0.161947   \n","std       0.455356        0.499769     57336.289016     0.368255     0.368439   \n","min       0.000000        0.000000        90.070000     0.000000     0.000000   \n","25%       0.000000        0.000000     51399.190000     0.000000     0.000000   \n","50%       1.000000        1.000000     99132.310000     0.000000     0.000000   \n","75%       1.000000        1.000000    149295.360000     0.000000     0.000000   \n","max       1.000000        1.000000    199929.170000     1.000000     1.000000   \n","\n","       Satisfaction Score  Point Earned  \n","count         5014.000000   5014.000000  \n","mean             3.017750    607.169924  \n","std              1.402843    225.611730  \n","min              1.000000    119.000000  \n","25%              2.000000    412.000000  \n","50%              3.000000    604.000000  \n","75%              4.000000    802.000000  \n","max              5.000000   1000.000000  "],"text/html":["\n","  <div id=\"df-149a01fc-63ff-4d3f-83c9-8aa6c71c079c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Point Earned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","      <td>5014.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>649.668329</td>\n","      <td>38.511767</td>\n","      <td>5.004587</td>\n","      <td>62092.636516</td>\n","      <td>1.530913</td>\n","      <td>0.706621</td>\n","      <td>0.516753</td>\n","      <td>99899.180814</td>\n","      <td>0.161747</td>\n","      <td>0.161947</td>\n","      <td>3.017750</td>\n","      <td>607.169924</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>97.016799</td>\n","      <td>10.469459</td>\n","      <td>2.888475</td>\n","      <td>64133.565524</td>\n","      <td>0.570347</td>\n","      <td>0.455356</td>\n","      <td>0.499769</td>\n","      <td>57336.289016</td>\n","      <td>0.368255</td>\n","      <td>0.368439</td>\n","      <td>1.402843</td>\n","      <td>225.611730</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>350.000000</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>90.070000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>119.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>582.000000</td>\n","      <td>31.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>51399.190000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>412.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>653.000000</td>\n","      <td>37.000000</td>\n","      <td>5.000000</td>\n","      <td>62153.500000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>99132.310000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>604.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>717.000000</td>\n","      <td>43.000000</td>\n","      <td>7.000000</td>\n","      <td>121444.877500</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>149295.360000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>802.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>850.000000</td>\n","      <td>92.000000</td>\n","      <td>10.000000</td>\n","      <td>238387.560000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>199929.170000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>1000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-149a01fc-63ff-4d3f-83c9-8aa6c71c079c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-149a01fc-63ff-4d3f-83c9-8aa6c71c079c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-149a01fc-63ff-4d3f-83c9-8aa6c71c079c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da55ac2f-f507-4bda-b558-8ab26bf5ed6b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da55ac2f-f507-4bda-b558-8ab26bf5ed6b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da55ac2f-f507-4bda-b558-8ab26bf5ed6b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df_f = df[df['Geography']=='Germany']\n","df_f.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"VaAhO16SXYU3","executionInfo":{"status":"ok","timestamp":1699522092543,"user_tz":-420,"elapsed":15,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"0ecd80af-60a9-44c8-fa1f-dd41b45c3184"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CreditScore          Age       Tenure        Balance  NumOfProducts  \\\n","count  2509.000000  2509.000000  2509.000000    2509.000000    2509.000000   \n","mean    651.453567    39.771622     5.009964  119730.116134       1.519729   \n","std      98.168937    10.519143     2.935154   27022.006157       0.619420   \n","min     350.000000    18.000000     0.000000   27288.430000       1.000000   \n","25%     584.000000    32.000000     2.000000  102800.720000       1.000000   \n","50%     651.000000    38.000000     5.000000  119703.100000       1.000000   \n","75%     722.000000    45.000000     8.000000  137560.380000       2.000000   \n","max     850.000000    84.000000    10.000000  214346.960000       4.000000   \n","\n","        HasCrCard  IsActiveMember  EstimatedSalary       Exited     Complain  \\\n","count  2509.00000     2509.000000      2509.000000  2509.000000  2509.000000   \n","mean      0.71383        0.497409    101113.435102     0.324432     0.326425   \n","std       0.45206        0.500093     58263.011501     0.468256     0.468998   \n","min       0.00000        0.000000        11.580000     0.000000     0.000000   \n","25%       0.00000        0.000000     51016.020000     0.000000     0.000000   \n","50%       1.00000        0.000000    102397.220000     0.000000     0.000000   \n","75%       1.00000        1.000000    151083.800000     1.000000     1.000000   \n","max       1.00000        1.000000    199970.740000     1.000000     1.000000   \n","\n","       Satisfaction Score  Point Earned  \n","count         2509.000000   2509.000000  \n","mean             3.005978    610.215225  \n","std              1.410107    225.147896  \n","min              1.000000    163.000000  \n","25%              2.000000    412.000000  \n","50%              3.000000    615.000000  \n","75%              4.000000    802.000000  \n","max              5.000000   1000.000000  "],"text/html":["\n","  <div id=\"df-ded5da40-e71b-459d-9427-66cace5a04d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Point Earned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.00000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","      <td>2509.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>651.453567</td>\n","      <td>39.771622</td>\n","      <td>5.009964</td>\n","      <td>119730.116134</td>\n","      <td>1.519729</td>\n","      <td>0.71383</td>\n","      <td>0.497409</td>\n","      <td>101113.435102</td>\n","      <td>0.324432</td>\n","      <td>0.326425</td>\n","      <td>3.005978</td>\n","      <td>610.215225</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>98.168937</td>\n","      <td>10.519143</td>\n","      <td>2.935154</td>\n","      <td>27022.006157</td>\n","      <td>0.619420</td>\n","      <td>0.45206</td>\n","      <td>0.500093</td>\n","      <td>58263.011501</td>\n","      <td>0.468256</td>\n","      <td>0.468998</td>\n","      <td>1.410107</td>\n","      <td>225.147896</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>350.000000</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>27288.430000</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>11.580000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>163.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>584.000000</td>\n","      <td>32.000000</td>\n","      <td>2.000000</td>\n","      <td>102800.720000</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>51016.020000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>412.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>651.000000</td>\n","      <td>38.000000</td>\n","      <td>5.000000</td>\n","      <td>119703.100000</td>\n","      <td>1.000000</td>\n","      <td>1.00000</td>\n","      <td>0.000000</td>\n","      <td>102397.220000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>615.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>722.000000</td>\n","      <td>45.000000</td>\n","      <td>8.000000</td>\n","      <td>137560.380000</td>\n","      <td>2.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>151083.800000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>4.000000</td>\n","      <td>802.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>850.000000</td>\n","      <td>84.000000</td>\n","      <td>10.000000</td>\n","      <td>214346.960000</td>\n","      <td>4.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>199970.740000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>1000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ded5da40-e71b-459d-9427-66cace5a04d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ded5da40-e71b-459d-9427-66cace5a04d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ded5da40-e71b-459d-9427-66cace5a04d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-14693de3-8993-4a6b-8340-e64dea0614de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-14693de3-8993-4a6b-8340-e64dea0614de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-14693de3-8993-4a6b-8340-e64dea0614de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df_f = df[df['Geography']=='Spain']\n","df_f.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"CXss4j1sXh0d","executionInfo":{"status":"ok","timestamp":1699522092544,"user_tz":-420,"elapsed":15,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"86855bd1-a0e0-4bce-d66a-1e0f93ac50d2"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CreditScore          Age       Tenure        Balance  NumOfProducts  \\\n","count  2477.000000  2477.000000  2477.000000    2477.000000    2477.000000   \n","mean    651.333872    38.890997     5.032297   61818.147763       1.539362   \n","std      94.365051    10.446119     2.856660   64235.555208       0.564646   \n","min     350.000000    18.000000     0.000000       0.000000       1.000000   \n","25%     587.000000    32.000000     3.000000       0.000000       1.000000   \n","50%     651.000000    37.000000     5.000000   61710.440000       2.000000   \n","75%     715.000000    44.000000     8.000000  121056.630000       2.000000   \n","max     850.000000    88.000000    10.000000  250898.090000       4.000000   \n","\n","         HasCrCard  IsActiveMember  EstimatedSalary       Exited     Complain  \\\n","count  2477.000000     2477.000000      2477.000000  2477.000000  2477.000000   \n","mean      0.694792        0.529673     99440.572281     0.166734     0.166734   \n","std       0.460588        0.499220     57103.678091     0.372813     0.372813   \n","min       0.000000        0.000000       417.410000     0.000000     0.000000   \n","25%       0.000000        0.000000     50267.690000     0.000000     0.000000   \n","50%       1.000000        1.000000     99984.860000     0.000000     0.000000   \n","75%       1.000000        1.000000    147278.430000     0.000000     0.000000   \n","max       1.000000        1.000000    199992.480000     1.000000     1.000000   \n","\n","       Satisfaction Score  Point Earned  \n","count         2477.000000   2477.000000  \n","mean             3.013726    601.441663  \n","std              1.408423    227.341158  \n","min              1.000000    219.000000  \n","25%              2.000000    407.000000  \n","50%              3.000000    596.000000  \n","75%              4.000000    795.000000  \n","max              5.000000   1000.000000  "],"text/html":["\n","  <div id=\"df-9a02373a-d2a2-4133-9c9f-59cc021c3f1e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Point Earned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","      <td>2477.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>651.333872</td>\n","      <td>38.890997</td>\n","      <td>5.032297</td>\n","      <td>61818.147763</td>\n","      <td>1.539362</td>\n","      <td>0.694792</td>\n","      <td>0.529673</td>\n","      <td>99440.572281</td>\n","      <td>0.166734</td>\n","      <td>0.166734</td>\n","      <td>3.013726</td>\n","      <td>601.441663</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>94.365051</td>\n","      <td>10.446119</td>\n","      <td>2.856660</td>\n","      <td>64235.555208</td>\n","      <td>0.564646</td>\n","      <td>0.460588</td>\n","      <td>0.499220</td>\n","      <td>57103.678091</td>\n","      <td>0.372813</td>\n","      <td>0.372813</td>\n","      <td>1.408423</td>\n","      <td>227.341158</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>350.000000</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>417.410000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>219.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>587.000000</td>\n","      <td>32.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>50267.690000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>407.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>651.000000</td>\n","      <td>37.000000</td>\n","      <td>5.000000</td>\n","      <td>61710.440000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>99984.860000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>596.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>715.000000</td>\n","      <td>44.000000</td>\n","      <td>8.000000</td>\n","      <td>121056.630000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>147278.430000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>795.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>850.000000</td>\n","      <td>88.000000</td>\n","      <td>10.000000</td>\n","      <td>250898.090000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>199992.480000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>1000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a02373a-d2a2-4133-9c9f-59cc021c3f1e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a02373a-d2a2-4133-9c9f-59cc021c3f1e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a02373a-d2a2-4133-9c9f-59cc021c3f1e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3524a7ff-0a58-40d4-a65d-bd3d2646def2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3524a7ff-0a58-40d4-a65d-bd3d2646def2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3524a7ff-0a58-40d4-a65d-bd3d2646def2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":[],"metadata":{"id":"L6zH4JirXqX9","executionInfo":{"status":"ok","timestamp":1699522092544,"user_tz":-420,"elapsed":15,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["#Balance"],"metadata":{"id":"zS7jCRGZX1XH"}},{"cell_type":"code","source":["sns.displot(df['Balance'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"-yKZ0ezwX6Jp","executionInfo":{"status":"ok","timestamp":1699522093158,"user_tz":-420,"elapsed":629,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"8b4b5bc1-924f-40db-91ce-a0e1d3f05631"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7b43bc9eac50>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"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pPqZM2daklhYWFhYWLy2VFRUNDvHWsUz66bKzMzUlClT3OsNDQ06fPiwunbt2vz/K/r/XC6XoqOj9fXXX8tut7e01UsO83N2zNGZMT9nxxyd2fman86dOzf72FYR1qGhoWrbtq1KSko8tpeUlJzyJQ6bzSabzeaxLTg42Ks92e12/kjOgPk5O+bozJifs2OOzsyk+WkVt8j09/dXYmKicnJy3NsaGhqUk5Mjh8Phw84AADi7VvHMWpKmTJmi9PR0XX311br22mv1/PPP69ixY+5PhwMAYKpWE9Z33XWXDh48qBkzZsjpdGrgwIFas2ZNiz5p2Bw2m00zZ8486WV2fIf5OTvm6MyYn7Njjs7MxPnxsyzL8nUTAADg9FrFe9YAAFzMCGsAAAxHWAMAYDjCGgAAwxHWF9CCBQt02WWXqUOHDkpKStKnn37q65ZabNasWfLz8/NY+vT5/uYBJ06cUEZGhrp27apOnTpp5MiRJ305TVFRkdLS0hQYGKiwsDBNnTr1pFtn5ubmatCgQbLZbOrVq5eysrJO6sWU+f3www916623KioqSn5+fnr77bc99luWpRkzZigyMlIBAQFKTk7Wl19+6VFz+PBhjR49Wna7XcHBwRo7dqz7e+Ubbdu2TTfccIM6dOig6OhozZs376Re3njjDfXp00cdOnRQ//79tXr16ib34m1nm5/777//pN+pYcOGedRcyvMzd+5cXXPNNercubPCwsJ0++23q7Cw0KPGpL+rc+nF285ljoYMGXLS79H48eM9ai6qOWr2F5WiSZYvX275+/tbr7zyirVz505r3LhxVnBwsFVSUuLr1lpk5syZVr9+/azi4mL3cvDgQff+8ePHW9HR0VZOTo61ZcsW67rrrrN++tOfuvfX1dVZV155pZWcnGxt3brVWr16tRUaGmplZma6a7766isrMDDQmjJlirVr1y7rhRdesNq2bWutWbPGXWPS/K5evdp67LHHrDfffNOSZL311lse+5966ikrKCjIevvtt60vvvjC+sUvfmHFxcVZVVVV7pphw4ZZAwYMsDZt2mR99NFHVq9evay7777bvb+iosIKDw+3Ro8ebe3YscP6xz/+YQUEBFj/8z//46755JNPrLZt21rz5s2zdu3aZU2fPt1q3769tX379ib1cqHnJz093Ro2bJjH79Thw4c9ai7l+UlNTbVeffVVa8eOHVZBQYE1YsQIKyYmxqqsrHTXmPR3dbZefDVHN954ozVu3DiP36Mffjf3xTZHhPUFcu2111oZGRnu9fr6eisqKsqaO3euD7tquZkzZ1oDBgw45b7y8nKrffv21htvvOHetnv3bkuSlZeXZ1nWd/9wt2nTxnI6ne6aRYsWWXa73aqurrYsy7IeffRRq1+/fh5j33XXXVZqaqp73dT5/XEYNTQ0WBEREdbTTz/t3lZeXm7ZbDbrH//4h2VZlrVr1y5LkvXZZ5+5a9577z3Lz8/P+uabbyzLsqyFCxdaXbp0cc+RZVnWtGnTrN69e7vXf/WrX1lpaWke/SQlJVm/+c1vzrmX8+10YX3bbbed9pjWND+WZVmlpaWWJGvDhg3uHkz5uzqXXi6EH8+RZX0X1r/73e9Oe8zFNke8DH4BNN6iMzk52b3tTLfovNh8+eWXioqKUo8ePTR69GgVFRVJkvLz81VbW+tx3n369FFMTIz7vPPy8tS/f3+PL6dJTU2Vy+XSzp073TU/HKOxpnGMi2l+9+/fL6fT6dFrUFCQkpKSPOYkODhYV199tbsmOTlZbdq00ebNm901gwcPlr+/v7smNTVVhYWFOnLkiLvmTPN2Lr34Sm5ursLCwtS7d29NmDBBhw4dcu9rbfPTeIvekJAQSWb9XZ1LLxfCj+eo0dKlSxUaGqorr7xSmZmZOn78uHvfxTZHreYbzHyprKxM9fX1J31bWnh4uPbs2eOjrrwjKSlJWVlZ6t27t4qLizV79mzdcMMN2rFjh5xOp/z9/U+6CUp4eLicTqckyel0nnJeGvedqcblcqmqqkpHjhy5aOa38ZxO1esPzzcsLMxjf7t27RQSEuJRExcXd9IYjfu6dOly2nn74Rhn68UXhg0bpjvuuENxcXHat2+f/vM//1PDhw9XXl6e2rZt26rmp6GhQZMmTdLPfvYzXXnlle6+TPm7OpdezrdTzZEk3XPPPYqNjVVUVJS2bdumadOmqbCwUG+++aa794tpjghrtMjw4cPdPyckJCgpKUmxsbFasWKFAgICfNgZLlajRo1y/9y/f38lJCSoZ8+eys3N1dChQ33Y2YWXkZGhHTt26OOPP/Z1K8Y63Rw99NBD7p/79++vyMhIDR06VPv27VPPnj0vdJstxsvgF0BTb9F5MQsODtYVV1yhvXv3KiIiQjU1NSovL/eo+eF5R0REnHJeGvedqcZutysgIOCimt/Gfs7Ua0REhEpLSz3219XV6fDhw16Ztx/uP1svJujRo4dCQ0O1d+9eSa1nfiZOnKiVK1fqgw8+UPfu3d3bTfq7OpdezqfTzdGpJCUlSZLH79HFNEeE9QXQmm7RWVlZqX379ikyMlKJiYlq3769x3kXFhaqqKjIfd4Oh0Pbt2/3+Mc3Oztbdrtd8fHx7pofjtFY0zjGxTS/cXFxioiI8OjV5XJp8+bNHnNSXl6u/Px8d8369evV0NDg/gfH4XDoww8/VG1trbsmOztbvXv3VpcuXdw1Z5q3c+nFBP/+97916NAhRUZGSrr058eyLE2cOFFvvfWW1q9ff9LL+Sb9XZ1LL+fD2eboVAoKCiTJ4/foopqjc/4oGlpk+fLlls1ms7Kysqxdu3ZZDz30kBUcHOzxScSL0SOPPGLl5uZa+/fvtz755BMrOTnZCg0NtUpLSy3L+u6ShZiYGGv9+vXWli1bLIfDYTkcDvfxjZdPpKSkWAUFBdaaNWusbt26nfLyialTp1q7d++2FixYcMrLJ0yZ36NHj1pbt261tm7dakmynn32WWvr1q3Wv/71L8uyvrscKDg42PrnP/9pbdu2zbrttttOeenWVVddZW3evNn6+OOPrcsvv9zj0qTy8nIrPDzcGjNmjLVjxw5r+fLlVmBg4EmXJrVr187605/+ZO3evduaOXPmKS9NOlsvF3J+jh49av3+97+38vLyrP3791vr1q2zBg0aZF1++eXWiRMnWsX8TJgwwQoKCrJyc3M9Ljs6fvy4u8akv6uz9eKLOdq7d681Z84ca8uWLdb+/futf/7zn1aPHj2swYMHX7RzRFhfQC+88IIVExNj+fv7W9dee621adMmX7fUYnfddZcVGRlp+fv7Wz/5yU+su+66y9q7d697f1VVlfUf//EfVpcuXazAwEDrl7/8pVVcXOwxxoEDB6zhw4dbAQEBVmhoqPXII49YtbW1HjUffPCBNXDgQMvf39/q0aOH9eqrr57Uiynz+8EHH1iSTlrS09Mty/rukqDHH3/cCg8Pt2w2mzV06FCrsLDQY4xDhw5Zd999t9WpUyfLbrdbv/71r62jR4961HzxxRfW9ddfb9lsNusnP/mJ9dRTT53Uy4oVK6wrrrjC8vf3t/r162etWrXKY/+59OJtZ5qf48ePWykpKVa3bt2s9u3bW7Gxsda4ceNO+p+uS3l+TjU3kjx+5036uzqXXrztbHNUVFRkDR482AoJCbFsNpvVq1cva+rUqR7XWVvWxTVH3CITAADD8Z41AACGI6wBADAcYQ0AgOEIawAADEdYAwBgOMIaAADDEdYAABiOsAYAwHCENYAzmjVrlgYOHOjrNoBWjbAGLmH333+//Pz83EvXrl01bNgwbdu2zdetAWgCwhq4xA0bNkzFxcUqLi5WTk6O2rVrp1tuucXXbQFoAsIauMTZbDZFREQoIiJCAwcO1B/+8Ad9/fXXOnjwoCRp2rRpuuKKKxQYGKgePXro8ccf97i15I999tlnuvnmmxUaGqqgoCDdeOON+vzzzz1q/Pz8tGTJEv3yl79UYGCgLr/8cr3zzjseNTt37tQtt9wiu92uzp0764YbbtC+ffvc+5csWaK+ffuqQ4cO6tOnjxYuXOjFWQEuLoQ10IpUVlbq73//u3r16qWuXbtKkjp37qysrCzt2rVL8+fP18svv6znnnvutGMcPXpU6enp+vjjj7Vp0yZdfvnlGjFihI4ePepRN3v2bP3qV7/Stm3bNGLECI0ePVqHDx+WJH3zzTcaPHiwbDab1q9fr/z8fD3wwAOqq6uTJC1dulQzZszQk08+qd27d+uPf/yjHn/8cb322mvnaWYAwzXpHl0ALirp6elW27ZtrY4dO1odO3a0JFmRkZFWfn7+aY95+umnrcTERPf6zJkzrQEDBpy2vr6+3urcubP17rvvurdJsqZPn+5er6ystCRZ7733nmVZlpWZmWnFxcVZNTU1pxyzZ8+e1rJlyzy2PfHEE+f9PsmAqdr5+P8VAJxnN910kxYtWiRJOnLkiBYuXKjhw4fr008/VWxsrF5//XX9+c9/1r59+1RZWam6ujrZ7fbTjldSUqLp06crNzdXpaWlqq+v1/Hjx1VUVORRl5CQ4P65Y8eOstvtKi0tlSQVFBTohhtuUPv27U8a/9ixY9q3b5/Gjh2rcePGubfX1dUpKCioRXMBXKwIa+AS17FjR/Xq1cu9vmTJEgUFBenll19WWlqaRo8erdmzZys1NVVBQUFavny5nnnmmdOOl56erkOHDmn+/PmKjY2VzWaTw+FQTU2NR92Pg9jPz08NDQ2SpICAgNOOX1lZKUl6+eWXlZSU5LGvbdu253bSwCWGsAZaGT8/P7Vp00ZVVVXauHGjYmNj9dhjj7n3/+tf/zrj8Z988okWLlyoESNGSJK+/vprlZWVNamHhIQEvfbaa6qtrT0p1MPDwxUVFaWvvvpKo0ePbtK4wKWKsAYucdXV1XI6nZK+exn8xRdfVGVlpW699Va5XC4VFRVp+fLluuaaa7Rq1Sq99dZbZxzv8ssv19/+9jddffXVcrlcmjp16hmfKZ/KxIkT9cILL2jUqFHKzMxUUFCQNm3apGuvvVa9e/fW7Nmz9dvf/lZBQUEaNmyYqqurtWXLFh05ckRTpkxp9lwAFys+DQ5c4tasWaPIyEhFRkYqKSlJn332md544w0NGTJEv/jFLzR58mRNnDhRAwcO1MaNG/X444+fcby//OUvOnLkiAYNGqQxY8bot7/9rcLCwprUU9euXbV+/XpVVlbqxhtvVGJiol5++WX3s+wHH3xQS5Ys0auvvqr+/fvrxhtvVFZWluLi4po9D8DFzM+yLMvXTQAAgNPjmTUAAIYjrAEAMBxhDQCA4QhrAAAMR1gDAGA4whoAAMMR1gAAGI6wBgDAcIQ1AACGI6wBADAcYQ0AgOH+H/QZ+tyGlvCiAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["df1 = df[df['Balance']==0]\n","len(df1[df1['Exited']==1])/len(df1)"],"metadata":{"id":"ii2RhsNuX_Q3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699522224365,"user_tz":-420,"elapsed":3,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"1bbcfe04-ff76-447e-df38-42d8b9439003"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.13823610727121924"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["def group_by_bal(bal):\n","  if int(bal)==0:\n","    return 0\n","  if int(bal) in range (1,50000):\n","    return 1\n","  elif int(bal) in range(50000,100000):\n","    return 50\n","  elif int(bal) in range(100000,150000):\n","    return 100\n","  elif int(bal) in range(150000,200000):\n","    return 150\n","  elif int(bal) in range(200000,250000):\n","    return 200\n","  else:\n","    return 250"],"metadata":{"id":"kFUEGlpkapRx","executionInfo":{"status":"ok","timestamp":1699522789129,"user_tz":-420,"elapsed":424,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df['group_bal'] = df['Balance'].map(group_by_bal)"],"metadata":{"id":"BbK9LAwrc5ms","executionInfo":{"status":"ok","timestamp":1699522825941,"user_tz":-420,"elapsed":2,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"GidCiPdgdErM","executionInfo":{"status":"ok","timestamp":1699522836727,"user_tz":-420,"elapsed":5,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"f26f0a4f-bac9-4a8c-87e2-a4969eef1b6f"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n","0             619    France  Female   42       2       0.00              1   \n","1             608     Spain  Female   41       1   83807.86              1   \n","2             502    France  Female   42       8  159660.80              3   \n","3             699    France  Female   39       1       0.00              2   \n","4             850     Spain  Female   43       2  125510.82              1   \n","...           ...       ...     ...  ...     ...        ...            ...   \n","9995          771    France    Male   39       5       0.00              2   \n","9996          516    France    Male   35      10   57369.61              1   \n","9997          709    France  Female   36       7       0.00              1   \n","9998          772   Germany    Male   42       3   75075.31              2   \n","9999          792    France  Female   28       4  130142.79              1   \n","\n","      HasCrCard  IsActiveMember  EstimatedSalary  Exited  Complain  \\\n","0             1               1        101348.88       1         1   \n","1             0               1        112542.58       0         1   \n","2             1               0        113931.57       1         1   \n","3             0               0         93826.63       0         0   \n","4             1               1         79084.10       0         0   \n","...         ...             ...              ...     ...       ...   \n","9995          1               0         96270.64       0         0   \n","9996          1               1        101699.77       0         0   \n","9997          0               1         42085.58       1         1   \n","9998          1               0         92888.52       1         1   \n","9999          1               0         38190.78       0         0   \n","\n","      Satisfaction Score Card Type  Point Earned  group_bal  \n","0                      2   DIAMOND           464          0  \n","1                      3   DIAMOND           456         50  \n","2                      3   DIAMOND           377        150  \n","3                      5      GOLD           350          0  \n","4                      5      GOLD           425        100  \n","...                  ...       ...           ...        ...  \n","9995                   1   DIAMOND           300          0  \n","9996                   5  PLATINUM           771         50  \n","9997                   3    SILVER           564          0  \n","9998                   2      GOLD           339         50  \n","9999                   3   DIAMOND           911        100  \n","\n","[10000 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-158ce944-4cdc-4bdf-897c-5ce3909a2c2a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Complain</th>\n","      <th>Satisfaction Score</th>\n","      <th>Card Type</th>\n","      <th>Point Earned</th>\n","      <th>group_bal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>DIAMOND</td>\n","      <td>464</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>DIAMOND</td>\n","      <td>456</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>DIAMOND</td>\n","      <td>377</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>GOLD</td>\n","      <td>350</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>GOLD</td>\n","      <td>425</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>771</td>\n","      <td>France</td>\n","      <td>Male</td>\n","      <td>39</td>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>96270.64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>DIAMOND</td>\n","      <td>300</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>516</td>\n","      <td>France</td>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>10</td>\n","      <td>57369.61</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101699.77</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>PLATINUM</td>\n","      <td>771</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>709</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>36</td>\n","      <td>7</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>42085.58</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>SILVER</td>\n","      <td>564</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>772</td>\n","      <td>Germany</td>\n","      <td>Male</td>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>75075.31</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>92888.52</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>GOLD</td>\n","      <td>339</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>792</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>28</td>\n","      <td>4</td>\n","      <td>130142.79</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38190.78</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>DIAMOND</td>\n","      <td>911</td>\n","      <td>100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-158ce944-4cdc-4bdf-897c-5ce3909a2c2a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-158ce944-4cdc-4bdf-897c-5ce3909a2c2a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-158ce944-4cdc-4bdf-897c-5ce3909a2c2a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4c0228a3-ce19-423c-a15a-70aa597f84c7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c0228a3-ce19-423c-a15a-70aa597f84c7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4c0228a3-ce19-423c-a15a-70aa597f84c7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["df_group_bal = df.groupby(by='group_bal').agg('count')\n","df_group_bal.reset_index(inplace=True,drop=False)\n","labels = df_group_bal['group_bal']\n","\n","fig1, ax1 = plt.subplots()\n","ax1.pie(df_group_bal['Age'], labels=labels, autopct='%1.1f%%')\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"oIoZrK_gdGu9","executionInfo":{"status":"ok","timestamp":1699523050268,"user_tz":-420,"elapsed":7,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"78d0bda0-d9ec-4bd6-92d8-f384d705f482"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_bal = df.groupby(by=['group_bal','Exited']).agg('count')\n","df_bal.reset_index(drop=False,inplace=True)\n","\n","df_bal = df_bal.rename(columns={'Age': 'count'})\n","\n","df_bal = df_bal[['group_bal','Exited','count']]\n","\n","df_balance_ = df_bal[df_bal['Exited']==0]\n","\n","df_balance_ex = df_bal[df_bal['Exited']==1]\n","\n"],"metadata":{"id":"zFVyIWzIdm-C","executionInfo":{"status":"ok","timestamp":1699523166767,"user_tz":-420,"elapsed":2,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["df_balance = pd.merge(df_balance_,df_balance_ex,how='outer',on='group_bal', suffixes=('_inex','_ex'))\n","df_balance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"vYpI70lHeSuL","executionInfo":{"status":"ok","timestamp":1699523277671,"user_tz":-420,"elapsed":384,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"5cbef4a8-9fcb-4db0-da63-dc930c1f7544"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group_bal  Exited_inex  count_inex  Exited_ex  count_ex\n","0          0          0.0      3117.0          1       500\n","1          1          0.0        49.0          1        26\n","2         50          0.0      1208.0          1       301\n","3        100          0.0      2843.0          1       987\n","4        150          0.0       730.0          1       205\n","5        200          0.0        15.0          1        18\n","6        250          NaN         NaN          1         1"],"text/html":["\n","  <div id=\"df-83605207-6522-4898-8080-1cdbda4b0185\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group_bal</th>\n","      <th>Exited_inex</th>\n","      <th>count_inex</th>\n","      <th>Exited_ex</th>\n","      <th>count_ex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>3117.0</td>\n","      <td>1</td>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>49.0</td>\n","      <td>1</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50</td>\n","      <td>0.0</td>\n","      <td>1208.0</td>\n","      <td>1</td>\n","      <td>301</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>100</td>\n","      <td>0.0</td>\n","      <td>2843.0</td>\n","      <td>1</td>\n","      <td>987</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>150</td>\n","      <td>0.0</td>\n","      <td>730.0</td>\n","      <td>1</td>\n","      <td>205</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>200</td>\n","      <td>0.0</td>\n","      <td>15.0</td>\n","      <td>1</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>250</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83605207-6522-4898-8080-1cdbda4b0185')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-83605207-6522-4898-8080-1cdbda4b0185 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-83605207-6522-4898-8080-1cdbda4b0185');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6a55a180-8e4c-4430-b4cb-b138eb292bfb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a55a180-8e4c-4430-b4cb-b138eb292bfb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6a55a180-8e4c-4430-b4cb-b138eb292bfb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df_balance.drop(columns=[ 'Exited_ex', 'Exited_inex' ],inplace=True)\n","df_balance[ 'natio']=df_balance.count_ex/(df_balance.count_ex+df_balance.count_inex)\n","df_balance\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"baYxsfN2gG_l","executionInfo":{"status":"ok","timestamp":1699523646696,"user_tz":-420,"elapsed":5,"user":{"displayName":"KHANG NGUYỄN PHÚC","userId":"14092302269421021919"}},"outputId":"df5ed781-e910-40fd-bb01-51b401d14ce8"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group_bal  count_inex  count_ex     natio\n","0          0      3117.0       500  0.138236\n","1          1        49.0        26  0.346667\n","2         50      1208.0       301  0.199470\n","3        100      2843.0       987  0.257702\n","4        150       730.0       205  0.219251\n","5        200        15.0        18  0.545455\n","6        250         NaN         1       NaN"],"text/html":["\n","  <div id=\"df-4ff9a782-cfe5-4105-ac79-ddd817b5c2fb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group_bal</th>\n","      <th>count_inex</th>\n","      <th>count_ex</th>\n","      <th>natio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3117.0</td>\n","      <td>500</td>\n","      <td>0.138236</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>49.0</td>\n","      <td>26</td>\n","      <td>0.346667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50</td>\n","      <td>1208.0</td>\n","      <td>301</td>\n","      <td>0.199470</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>100</td>\n","      <td>2843.0</td>\n","      <td>987</td>\n","      <td>0.257702</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>150</td>\n","      <td>730.0</td>\n","      <td>205</td>\n","      <td>0.219251</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>200</td>\n","      <td>15.0</td>\n","      <td>18</td>\n","      <td>0.545455</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>250</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ff9a782-cfe5-4105-ac79-ddd817b5c2fb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ff9a782-cfe5-4105-ac79-ddd817b5c2fb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ff9a782-cfe5-4105-ac79-ddd817b5c2fb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-95ce34ff-9b51-4046-9735-8e87d3d5d2c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95ce34ff-9b51-4046-9735-8e87d3d5d2c6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-95ce34ff-9b51-4046-9735-8e87d3d5d2c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[],"metadata":{"id":"9x3AhopQey3w"},"execution_count":null,"outputs":[]}]}